import{d as g,o,c as n,a as e,t as d,b as p,u as l,e as h,f,l as w,g as C,m as y,J as N,j as F,v as k,F as S,p as $,q as I,w as L,s as R}from"./index.442b962e.js";import{F as v}from"./index.es.d567cc9e.js";import{I as V}from"./InfoBox.e2c3a375.js";const j={class:"country"},q={class:"country__flag"},B={class:"country__flag-wrapper"},M=["src","alt"],O={class:"country__name"},D={class:"country__details"},U={class:"country__population"},X=e("p",{class:"country__region"},null,-1),z={class:"country__capital"},T=g({props:{country:{type:Object,required:!0}},setup(a){return(i,m)=>(o(),n("div",j,[e("div",q,[e("div",B,[e("img",{src:a.country.flags.svg,alt:`flag of ${a.country.name.common}`},null,8,M)])]),e("h4",O,d(a.country.name.common),1),e("div",D,[e("p",U,[p(l(v),{class:"fa-sm",icon:["fas","user"]}),h(" Population: "+d(Number(a.country.population).toLocaleString()),1)]),X,p(l(v),{class:"fa-sm",icon:["fas","globe"]}),h(" Region: "+d(a.country.region)+" ",1),e("p",z,[p(l(v),{class:"fa-sm",icon:["fas","landmark"]}),h(" Capital: "+d(a.country.capital?a.country.capital[0]:"N/A"),1)])])]))}});const H={class:"countries-wrapper"},J=e("h3",null,"Country Listing",-1),Y=["onSubmit"],G=e("label",{for:"searchTerm",class:"sr-only"},"Search countries by name",-1),K=e("button",{id:"search-button",type:"submit"}," Search ",-1),Q={key:0},W={key:1},Z={key:0,class:"spinner"},ee={key:1},te=e("h3",null,"Search results:",-1),se={class:"countries"},oe=e("h3",null,"All countries",-1),ae={class:"countries"},ne=g({setup(a){const i=f(""),m=w([]);let u=w([]);const A="https://restcountries.com/v3.1/all",_=f(!1),c=f(null),x=f(null);function b(r,t){return r.name.common<t.name.common?-1:r.name.common>t.name.common?1:0}async function E(){let r=`https://restcountries.com/v3.1/name/${i.value}`;_.value=!0;try{const t=await fetch(r);let s=await t.json();if(t.ok)s=s.sort(b),u.splice(0),u.push(...s),c.value="";else throw new Error(t.statusText)}catch(t){t instanceof Error?c.value=t.message:c.value="Something went wrong"}_.value=!1}function P(){i.value===""&&(u.splice(0),c.value="")}return C(async()=>{var r;_.value=!0;try{const t=await fetch(A);let s=await t.json();if(t.ok)s=s.sort(b),m.push(...s);else throw new Error(t.statusText)}catch(t){t instanceof Error?c.value=t.message:c.value="Something went wrong"}_.value=!1,(r=x.value)==null||r.focus()}),(r,t)=>(o(),n("div",H,[J,e("form",{id:"country-search-form",onSubmit:F(E,["prevent"])},[e("fieldset",null,[G,y(e("input",{id:"searchTerm",ref_key:"searchInput",ref:x,"onUpdate:modelValue":t[0]||(t[0]=s=>i.value=s),placeholder:"Search countries by name",type:"text",required:"",onInput:P},null,544),[[N,i.value]]),K])],40,Y),c.value?(o(),n("div",Q,[e("p",null,d(c.value),1)])):(o(),n("div",W,[_.value?(o(),n("div",Z)):(o(),n("div",ee,[y(e("div",null,[te,e("div",se,[(o(!0),n(S,null,$(l(u),s=>(o(),I(T,{key:s.ccn3,country:s},null,8,["country"]))),128))])],512),[[k,l(u).length]]),y(e("div",null,[oe,e("div",ae,[(o(!0),n(S,null,$(l(m),s=>(o(),I(T,{key:s.ccn3,country:s},null,8,["country"]))),128))])],512),[[k,!l(u).length]])]))]))]))}});const ce={class:"exercise-3"},re={class:"exercise-3__instructions"},le=e("h2",null," Exercise 3 ",-1),ie=e("p",null,[h(" For this exercise, you'll create a component (or components) that query a REST API of your choice and render the data you get back. The "),e("code",null,"SOExample"),h(" component below has been provided as a brief example. ")],-1),ue=e("em",null,"Note:",-1),he=h(" This exercise is more open-ended than the previous exercises. Use this as an opportunity to show off your design chops but don't let this take you longer than the allotted time! "),_e=R('<ul class="instruction-list ma-auto my-6"><strong>To complete this exercise, ensure that you have...</strong><li> replaced the <code>SOExample</code> component with your own component </li><li>pulled some data from a REST API of your choice</li><li>rendered that data in the mode of your choosing</li></ul><p> You may use any publicly-available REST API. Here are some ideas to help you get started. <ul><li><a href="https://api.stackexchange.com/docs" target="_blank">Stack Exchange API</a></li><li><a href="https://api.nasa.gov/index.html" target="_blank">NASA Open APIs</a></li><li><a href="https://github.com/r-spacex/SpaceX-API" target="_blank">SpaceX API</a></li><li><a href="https://restcountries.com/" target="_blank">Countries API</a></li><li><a href="https://docs.thedogapi.com/" target="_blank">The Dog API</a></li><li><a href="https://docs.thecatapi.com/" target="_blank">The Cat API</a></li></ul></p><p> Modify the following component as you see fit to accomplish the above stories. </p>',3),de={class:"exercise-3__results"},ye=g({setup(a){return(i,m)=>(o(),n("div",ce,[e("div",re,[le,ie,p(V,null,{default:L(()=>[ue,he]),_:1}),_e]),e("div",de,[p(ne)])]))}});export{ye as default};
